"use strict";(self.webpackChunkpcoin_website=self.webpackChunkpcoin_website||[]).push([[331],{4137:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=o,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||a;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},975:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return u}});var r=n(7462),o=n(3366),a=(n(7294),n(4137)),i=["components"],l={title:"Unauthenticated REST Interface",sidebar_position:3},s=void 0,c={unversionedId:"Pcoin-Core/Development/REST-interface",id:"Pcoin-Core/Development/REST-interface",title:"Unauthenticated REST Interface",description:"The REST API can be enabled with the -rest option.",source:"@site/docs/Pcoin-Core/Development/REST-interface.md",sourceDirName:"Pcoin-Core/Development",slug:"/Pcoin-Core/Development/REST-interface",permalink:"/pcoin.dev/docs/Pcoin-Core/Development/REST-interface",draft:!1,editUrl:"https://github.com/pcoinproject/pcoin.dev/edit/master/docs/Pcoin-Core/Development/REST-interface.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Unauthenticated REST Interface",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Release Process",permalink:"/pcoin.dev/docs/Pcoin-Core/Development/release-process"},next:{title:"Expectations for DNS Seed operators",permalink:"/pcoin.dev/docs/Pcoin-Core/Development/dnsseed-policy"}},p={},u=[{value:"Supported API",id:"supported-api",level:2},{value:"Transactions",id:"transactions",level:4},{value:"Blocks",id:"blocks",level:4},{value:"Blockheaders",id:"blockheaders",level:4},{value:"Chaininfos",id:"chaininfos",level:4},{value:"Query UTXO set",id:"query-utxo-set",level:4},{value:"Memory pool",id:"memory-pool",level:4}],d={toc:u};function m(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The REST API can be enabled with the ",(0,a.kt)("inlineCode",{parentName:"p"},"-rest")," option."),(0,a.kt)("h2",{id:"supported-api"},"Supported API"),(0,a.kt)("h4",{id:"transactions"},"Transactions"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"GET /rest/tx/<TX-HASH>.<bin|hex|json>\n")),(0,a.kt)("p",null,"Given a transaction hash: returns a transaction in binary, hex-encoded binary, or JSON formats."),(0,a.kt)("p",null,'For full TX query capability, one must enable the transaction index via "txindex=1" command line / configuration option. (enabled by default)'),(0,a.kt)("h4",{id:"blocks"},"Blocks"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"GET /rest/block/<BLOCK-HASH>.<bin|hex|json>\nGET /rest/block/notxdetails/<BLOCK-HASH>.<bin|hex|json>\n")),(0,a.kt)("p",null,"Given a block hash: returns a block, in binary, hex-encoded binary or JSON formats."),(0,a.kt)("p",null,"The HTTP request and response are both handled entirely in-memory, thus making maximum memory usage at least 4.66MB (2 MB max block, plus hex encoding) per request."),(0,a.kt)("p",null,"With the /notxdetails/ option JSON response will only contain the transaction hash instead of the complete transaction details. The option only affects the JSON response."),(0,a.kt)("h4",{id:"blockheaders"},"Blockheaders"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"GET /rest/headers/<COUNT>/<BLOCK-HASH>.<bin|hex|json>\n")),(0,a.kt)("p",null,"Given a block hash: returns COUNT amount of blockheaders in upward direction."),(0,a.kt)("h4",{id:"chaininfos"},"Chaininfos"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"GET /rest/chaininfo.json\n")),(0,a.kt)("p",null,"Returns various state info regarding block chain processing.\nOnly supports JSON as output format."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"chain : (string) current network name (main, test, regtest)"),(0,a.kt)("li",{parentName:"ul"},"blocks : (numeric) the current number of blocks processed in the server"),(0,a.kt)("li",{parentName:"ul"},"headers : (numeric) the current number of headers we have validated"),(0,a.kt)("li",{parentName:"ul"},"bestblockhash : (string) the hash of the currently best block"),(0,a.kt)("li",{parentName:"ul"},"difficulty : (numeric) the current difficulty"),(0,a.kt)("li",{parentName:"ul"},"verificationprogress : (numeric) estimate of verification progress ","[0..1]"),(0,a.kt)("li",{parentName:"ul"},"chainwork : (string) total amount of work in active chain, in hexadecimal")),(0,a.kt)("h4",{id:"query-utxo-set"},"Query UTXO set"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"GET /rest/getutxos/<checkmempool>/<txid>-<n>/<txid>-<n>/.../<txid>-<n>.<bin|hex|json>\n")),(0,a.kt)("p",null,"The getutxo command allows querying of the UTXO set given a set of outpoints.\nSee BIP64 for input and output serialisation:\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/bitcoin/bips/blob/master/bip-0064.mediawiki"},"https://github.com/bitcoin/bips/blob/master/bip-0064.mediawiki")),(0,a.kt)("p",null,"Example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'$ curl localhost:18332/rest/getutxos/checkmempool/b2cdfd7b89def827ff8af7cd9bff7627ff72e5e8b0f71210f92ea7a4000c5d75-0.json 2>/dev/null | json_pp\n{\n   "chaintipHash" : "00000000fb01a7f3745a717f8caebee056c484e6e0bfe4a9591c235bb70506fb",\n   "chainHeight" : 325347,\n   "utxos" : [\n      {\n         "scriptPubKey" : {\n            "addresses" : [\n               "mi7as51dvLJsizWnTMurtRmrP8hG2m1XvD"\n            ],\n            "type" : "pubkeyhash",\n            "hex" : "76a9141c7cebb529b86a04c683dfa87be49de35bcf589e88ac",\n            "reqSigs" : 1,\n            "asm" : "OP_DUP OP_HASH160 1c7cebb529b86a04c683dfa87be49de35bcf589e OP_EQUALVERIFY OP_CHECKSIG"\n         },\n         "value" : 8.8687,\n         "height" : 2147483647,\n         "txvers" : 1\n      }\n   ],\n   "bitmap" : "1"\n}\n')),(0,a.kt)("h4",{id:"memory-pool"},"Memory pool"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"GET /rest/mempool/info.json\n")),(0,a.kt)("p",null,"Returns various information about the TX mempool.\nOnly supports JSON as output format."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"loaded : (boolean) if the mempool is fully loaded"),(0,a.kt)("li",{parentName:"ul"},"size : (numeric) the number of transactions in the TX mempool"),(0,a.kt)("li",{parentName:"ul"},"bytes : (numeric) size of the TX mempool in bytes")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"GET /rest/mempool/contents.json\n")),(0,a.kt)("p",null,"Returns transactions in the TX mempool.\nOnly supports JSON as output format."),(0,a.kt)("div",{className:"admonition admonition-danger alert alert--danger"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"Risks")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"Running a web browser on the same node with a REST enabled pcoind can be a risk. Accessing prepared XSS websites could read out tx/block data of your node by placing links like ",(0,a.kt)("inlineCode",{parentName:"p"},'<script src="http://127.0.0.1:22502/rest/tx/1234567890.json">')," which might break the nodes privacy."))))}m.isMDXComponent=!0}}]);