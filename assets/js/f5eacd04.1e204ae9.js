"use strict";(self.webpackChunkpcoin_website=self.webpackChunkpcoin_website||[]).push([[7781],{4137:function(e,t,i){i.d(t,{Zo:function(){return p},kt:function(){return g}});var n=i(7294);function r(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function o(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function a(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?o(Object(i),!0).forEach((function(t){r(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):o(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function l(e,t){if(null==e)return{};var i,n,r=function(e,t){if(null==e)return{};var i,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)i=o[n],t.indexOf(i)>=0||(r[i]=e[i]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)i=o[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(r[i]=e[i])}return r}var u=n.createContext({}),s=function(e){var t=n.useContext(u),i=t;return e&&(i="function"==typeof e?e(t):a(a({},t),e)),i},p=function(e){var t=s(e.components);return n.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var i=e.components,r=e.mdxType,o=e.originalType,u=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(i),g=r,m=d["".concat(u,".").concat(g)]||d[g]||c[g]||o;return i?n.createElement(m,a(a({ref:t},p),{},{components:i})):n.createElement(m,a({ref:t},p))}));function g(e,t){var i=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=i.length,a=new Array(o);a[0]=d;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:r,a[1]=l;for(var s=2;s<o;s++)a[s]=i[s];return n.createElement.apply(null,a)}return n.createElement.apply(null,i)}d.displayName="MDXCreateElement"},1618:function(e,t,i){i.r(t),i.d(t,{assets:function(){return p},contentTitle:function(){return u},default:function(){return g},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return c}});var n=i(3117),r=i(102),o=(i(7294),i(4137)),a=["components"],l={title:"Setting up Gitian on Windows WSL",sidebar_position:6},u=void 0,s={unversionedId:"Pcoin-Core/Building/gitian-building/gitian-setup-windows",id:"Pcoin-Core/Building/gitian-building/gitian-setup-windows",title:"Setting up Gitian on Windows WSL",description:"Now that Docker for Windows and WSL's Ubuntu 18.04 LTS have been installed and configured properly, you're ready to do the initial setup of the Gitian build system.",source:"@site/docs/Pcoin-Core/Building/gitian-building/gitian-setup-windows.md",sourceDirName:"Pcoin-Core/Building/gitian-building",slug:"/Pcoin-Core/Building/gitian-building/gitian-setup-windows",permalink:"/docs/Pcoin-Core/Building/gitian-building/gitian-setup-windows",draft:!1,editUrl:"https://github.com/pcoinproject/pcoin.dev/edit/master/docs/Pcoin-Core/Building/gitian-building/gitian-setup-windows.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{title:"Setting up Gitian on Windows WSL",sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Setting Up WSL",permalink:"/docs/Pcoin-Core/Building/gitian-building/wsl-setup-windows"},next:{title:"Setting Up Gitian on Ubuntu and Debian",permalink:"/docs/Pcoin-Core/Building/gitian-building/gitian-setup-ubuntu"}},p={},c=[{value:"Required System Packages",id:"required-system-packages",level:2},{value:"Configuring Git",id:"configuring-git",level:3},{value:"Fetching the Build Script",id:"fetching-the-build-script",level:2},{value:"Initial Gitian Setup",id:"initial-gitian-setup",level:2}],d={toc:c};function g(e){var t=e.components,i=(0,r.Z)(e,a);return(0,o.kt)("wrapper",(0,n.Z)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Now that ",(0,o.kt)("a",{parentName:"p",href:"/docs/Pcoin-Core/Building/gitian-building/docker-setup-windows"},"Docker for Windows")," and ",(0,o.kt)("a",{parentName:"p",href:"/docs/Pcoin-Core/Building/gitian-building/wsl-setup-windows"},"WSL's Ubuntu 18.04 LTS")," have been installed and configured properly, you're ready to do the initial setup of the Gitian build system."),(0,o.kt)("p",null,'The following steps will be performed using the WSL terminal, which can be accessed by running the "Ubuntu 18.04 LTS" app from the Windows start menu.'),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Table of Contents")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#required-system-packages"},"Required system packages"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#configuring-git"},"Configuring Git")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#fetching-the-build-script"},"Fetching the Build Script")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#initial-gitian-setup"},"Initial Gitian Setup"))),(0,o.kt)("h2",{id:"required-system-packages"},"Required System Packages"),(0,o.kt)("p",null,"Python3 and Git are the two base requirements that need to be met for our build setup."),(0,o.kt)("p",null,"Ubuntu 18.04 already includes python3 out of the box, so we only need to install ",(0,o.kt)("inlineCode",{parentName:"p"},"git")," with the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt install git\n")),(0,o.kt)("h3",{id:"configuring-git"},"Configuring Git"),(0,o.kt)("p",null,"Once Git is installed, you will need to do some basic configuration to set your name and email. In the below command examples, it is good practice to use your GitHub username and email address:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'git config --global user.name "GITHUB_USERNAME"\ngit config --global user.email "MY_NAME@example.com"\n')),(0,o.kt)("h2",{id:"fetching-the-build-script"},"Fetching the Build Script"),(0,o.kt)("p",null,"The build script we'll be using is contained in the PCOIN github repository (",(0,o.kt)("a",{parentName:"p",href:"https://github.com/pcoinproject/pcoin/blob/master/contrib/gitian-build.py"},"contrib/gitian-build.py"),"). Since this is a completely fresh environment, we haven't yet cloned the PCOIN repository and will need to fetch this script with the following commands:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"curl -L -O https://raw.githubusercontent.com/pcoinproject/pcoin/master/contrib/gitian-build.py\nchmod +x gitian-build.py\n")),(0,o.kt)("p",null,"This will place the script in your home directory and make it executable."),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("em",{parentName:"p"},"Changes to the script in the repository won't be automatically applied after fetching with the above commands. It is good practice to periodically re-run the above commands to ensure your version of the script is always up to date."))),(0,o.kt)("h2",{id:"initial-gitian-setup"},"Initial Gitian Setup"),(0,o.kt)("p",null,"Now that the script has been downloaded to your home directory, its time to run it in setup mode. This will perform the following actions:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Install the necessary system packages for gitian (namely the Docker cli tools)."),(0,o.kt)("li",{parentName:"ul"},"Clone the gitian-builder, gitian.sigs, pcoin-detached-sigs, and pcoin GitHub repos."),(0,o.kt)("li",{parentName:"ul"},"Configure proper user/group permissions for running gitian with Docker"),(0,o.kt)("li",{parentName:"ul"},"Create a base Docker image.")),(0,o.kt)("p",null,"Run the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"./gitian-build.py --docker --setup\n")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"The ",(0,o.kt)("inlineCode",{parentName:"em"},"--docker")," option instructs the script to use Docker, and the ",(0,o.kt)("inlineCode",{parentName:"em"},"--setup")," option instructs the script to run the setup procedure.")))}g.isMDXComponent=!0}}]);