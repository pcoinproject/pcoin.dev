"use strict";(self.webpackChunkpcoin_website=self.webpackChunkpcoin_website||[]).push([[981],{4137:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return m}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var d=a.createContext({}),p=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},s=function(e){var t=p(e.components);return a.createElement(d.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,l=e.originalType,d=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),c=p(n),m=i,h=c["".concat(d,".").concat(m)]||c[m]||u[m]||l;return n?a.createElement(h,r(r({ref:t},s),{},{components:n})):a.createElement(h,r({ref:t},s))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=n.length,r=new Array(l);r[0]=c;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o.mdxType="string"==typeof e?e:i,r[1]=o;for(var p=2;p<l;p++)r[p]=n[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},2668:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return d},default:function(){return m},frontMatter:function(){return o},metadata:function(){return p},toc:function(){return u}});var a=n(7462),i=n(3366),l=(n(7294),n(4137)),r=["components"],o={title:"UNIX Build guide",description:"Some notes on how to build PCOIN Core in UNIX.",sidebar_position:2},d=void 0,p={unversionedId:"Pcoin-Core/Building/build-unix",id:"Pcoin-Core/Building/build-unix",title:"UNIX Build guide",description:"Some notes on how to build PCOIN Core in UNIX.",source:"@site/docs/Pcoin-Core/Building/build-unix.md",sourceDirName:"Pcoin-Core/Building",slug:"/Pcoin-Core/Building/build-unix",permalink:"/pcoin.dev/docs/Pcoin-Core/Building/build-unix",draft:!1,editUrl:"https://github.com/pcoinproject/pcoin.dev/edit/master/docs/Pcoin-Core/Building/build-unix.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"UNIX Build guide",description:"Some notes on how to build PCOIN Core in UNIX.",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"macOS Build guide",permalink:"/pcoin.dev/docs/Pcoin-Core/Building/build-osx"},next:{title:"Windows Build guide",permalink:"/pcoin.dev/docs/Pcoin-Core/Building/build-windows"}},s={},u=[{value:"To Build",id:"to-build",level:2},{value:"Dependencies",id:"dependencies",level:2},{value:"Memory Requirements",id:"memory-requirements",level:2},{value:"Linux Distribution Specific Instructions",id:"linux-distribution-specific-instructions",level:2},{value:"Ubuntu &amp; Debian",id:"ubuntu--debian",level:3},{value:"Dependency Build Instructions",id:"dependency-build-instructions",level:4},{value:"Fedora",id:"fedora",level:3},{value:"Dependency Build Instructions",id:"dependency-build-instructions-1",level:4},{value:"miniupnpc",id:"miniupnpc",level:2},{value:"libnatpmp",id:"libnatpmp",level:2},{value:"Berkeley DB",id:"berkeley-db",level:2},{value:"Boost",id:"boost",level:2},{value:"Security",id:"security",level:2},{value:"Disable-wallet mode",id:"disable-wallet-mode",level:2},{value:"Additional Configure Flags",id:"additional-configure-flags",level:2},{value:"ARM Cross-compilation",id:"arm-cross-compilation",level:2}],c={toc:u};function m(e){var t=e.components,n=(0,i.Z)(e,r);return(0,l.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"Always use absolute paths to configure and compile PCOIN Core and the dependencies,\nFor example, when specifying the path of the dependency:"),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre"},"../dist/configure --enable-cxx --disable-shared --with-pic --prefix=$BDB_PREFIX\n")),(0,l.kt)("p",{parentName:"div"},"Here BDB_PREFIX must be an absolute path - it is defined using $(pwd) which ensures\nthe usage of the absolute path."))),(0,l.kt)("h2",{id:"to-build"},"To Build"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"./autogen.sh\n./configure\nmake\nmake install # optional\n")),(0,l.kt)("p",null,"This will build pcoin-qt as well, if the dependencies are met."),(0,l.kt)("h2",{id:"dependencies"},"Dependencies"),(0,l.kt)("p",null,"These dependencies are required:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Library"),(0,l.kt)("th",{parentName:"tr",align:null},"Purpose"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"libboost"),(0,l.kt)("td",{parentName:"tr",align:null},"Utility"),(0,l.kt)("td",{parentName:"tr",align:null},"Library for threading, data structures, etc")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"libevent"),(0,l.kt)("td",{parentName:"tr",align:null},"Networking"),(0,l.kt)("td",{parentName:"tr",align:null},"OS independent asynchronous networking")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"libgmp"),(0,l.kt)("td",{parentName:"tr",align:null},"Bignum Arithmetic"),(0,l.kt)("td",{parentName:"tr",align:null},"Precision arithmetic")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"libsodium"),(0,l.kt)("td",{parentName:"tr",align:null},"Sapling Crypto"),(0,l.kt)("td",{parentName:"tr",align:null},"A modern, portable, easy to use crypto library")))),(0,l.kt)("p",null,"Optional dependencies:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Library"),(0,l.kt)("th",{parentName:"tr",align:null},"Purpose"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"miniupnpc"),(0,l.kt)("td",{parentName:"tr",align:null},"UPnP Support"),(0,l.kt)("td",{parentName:"tr",align:null},"Firewall-jumping support")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"libnatpmp"),(0,l.kt)("td",{parentName:"tr",align:null},"NAT-PMP Support"),(0,l.kt)("td",{parentName:"tr",align:null},"Firewall-jumping support")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"libdb4.8"),(0,l.kt)("td",{parentName:"tr",align:null},"Berkeley DB"),(0,l.kt)("td",{parentName:"tr",align:null},"Wallet storage (only needed when wallet enabled)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"qt"),(0,l.kt)("td",{parentName:"tr",align:null},"GUI"),(0,l.kt)("td",{parentName:"tr",align:null},"GUI toolkit (only needed when GUI enabled)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"univalue"),(0,l.kt)("td",{parentName:"tr",align:null},"Utility"),(0,l.kt)("td",{parentName:"tr",align:null},"JSON parsing and encoding (bundled version will be used unless --with-system-univalue passed to configure)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"libzmq3"),(0,l.kt)("td",{parentName:"tr",align:null},"ZMQ notification"),(0,l.kt)("td",{parentName:"tr",align:null},"Optional, allows generating ZMQ notifications (requires ZMQ version >= 4.0.0)")))),(0,l.kt)("p",null,"For the versions used, see ",(0,l.kt)("a",{parentName:"p",href:"dependencies"},"dependencies")),(0,l.kt)("h2",{id:"memory-requirements"},"Memory Requirements"),(0,l.kt)("p",null,"C++ compilers are memory-hungry. It is recommended to have at least 1.5 GB of\nmemory available when compiling PCOIN Core. On systems with less, gcc can be\ntuned to conserve memory with additional CXXFLAGS:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},'./configure CXXFLAGS="--param ggc-min-expand=1 --param ggc-min-heapsize=32768"\n')),(0,l.kt)("h2",{id:"linux-distribution-specific-instructions"},"Linux Distribution Specific Instructions"),(0,l.kt)("h3",{id:"ubuntu--debian"},"Ubuntu & Debian"),(0,l.kt)("h4",{id:"dependency-build-instructions"},"Dependency Build Instructions"),(0,l.kt)("p",null,"Build requirements:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"sudo apt-get install build-essential libtool bsdmainutils autotools-dev autoconf pkg-config automake python3\n")),(0,l.kt)("p",null,"Now, you can either build from self-compiled ",(0,l.kt)("a",{parentName:"p",href:"depends"},"depends")," or install the required dependencies:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"sudo apt-get install libgmp-dev libevent-dev libboost-all-dev libsodium-dev cargo\n")),(0,l.kt)("p",null,"BerkeleyDB is required for the wallet."),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},(0,l.kt)("strong",{parentName:"p"},"For Ubuntu only:")," db4.8 packages are available ",(0,l.kt)("a",{parentName:"p",href:"https://launchpad.net/~pcoin-dev/+archive/ubuntu/ppa"},"here"),".\nYou can add the repository using the following command:"),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"sudo apt-get install software-properties-common\nsudo add-apt-repository ppa:pcoin-dev/ppa\nsudo apt-get update\nsudo apt-get install libdb4.8-dev libdb4.8++-dev\n")),(0,l.kt)("p",{parentName:"div"},"Ubuntu and Debian have their own libdb-dev and libdb++-dev packages, but these will install\nBerkeleyDB 5.1 or later. This will break binary wallet compatibility with the distributed executables, which\nare based on BerkeleyDB 4.8. If you do not care about wallet compatibility,\npass ",(0,l.kt)("inlineCode",{parentName:"p"},"--with-incompatible-bdb")," to configure."),(0,l.kt)("p",{parentName:"div"},"Otherwise, you can build from self-compiled ",(0,l.kt)("inlineCode",{parentName:"p"},"depends")," (see above)."))),(0,l.kt)("p",null,"To build PCOIN Core without wallet, see ",(0,l.kt)("a",{parentName:"p",href:"#disable-wallet-mode"},(0,l.kt)("em",{parentName:"a"},"Disable-wallet mode"))),(0,l.kt)("p",null,"Optional port mapping libraries (see: ",(0,l.kt)("inlineCode",{parentName:"p"},"--with-miniupnpc"),", and ",(0,l.kt)("inlineCode",{parentName:"p"},"--enable-upnp-default"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"--with-natpmp"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"--enable-natpmp-default"),"):"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"sudo apt install libminiupnpc-dev libnatpmp-dev\n")),(0,l.kt)("p",null,"ZMQ dependencies (provides ZMQ API):"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"sudo apt-get install libzmq3-dev\n")),(0,l.kt)("p",null,"GUI dependencies:"),(0,l.kt)("p",null,"If you want to build pcoin-qt, make sure that the required packages for Qt development\nare installed. Qt 5 is necessary to build the GUI.\nTo build without GUI pass ",(0,l.kt)("inlineCode",{parentName:"p"},"--without-gui"),"."),(0,l.kt)("p",null,"To build with Qt 5 you need the following:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"sudo apt-get install libqt5gui5 libqt5core5a libqt5dbus5 libqt5svg5-dev libqt5charts5-dev qttools5-dev qttools5-dev-tools libqrencode-dev\n")),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"Ubuntu versions prior to Bionic (18.04), and Debian version prior to Buster, do not have the ",(0,l.kt)("inlineCode",{parentName:"p"},"libqt5charts5-dev")," package. If you are compiling on one of these older versions, you will need to omit ",(0,l.kt)("inlineCode",{parentName:"p"},"libqt5charts5-dev")," from the above command."))),(0,l.kt)("p",null,"Once these are installed, they will be found by configure and a pcoin-qt executable will be\nbuilt by default."),(0,l.kt)("h3",{id:"fedora"},"Fedora"),(0,l.kt)("h4",{id:"dependency-build-instructions-1"},"Dependency Build Instructions"),(0,l.kt)("p",null,"Build requirements:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"sudo dnf install which gcc-c++ libtool make autoconf automake libevent-devel boost-devel libdb4-devel libdb4-cxx-devel gmp-devel libsodium-devel cargo python3\n")),(0,l.kt)("p",null,"Optional:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"sudo dnf install miniupnpc-devel libnatpmp-devel zeromq-devel\n")),(0,l.kt)("p",null,"To build with Qt 5 you need the following:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"sudo dnf install qt5-qttools-devel qt5-qtbase-devel qt5-qtsvg-devel qt5-qtcharts-devel qrencode-devel\n")),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},'The release is built with GCC and then "strip pcoind" to strip the debug\nsymbols, which reduces the executable size by about 90%.'))),(0,l.kt)("h2",{id:"miniupnpc"},"miniupnpc"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"http://miniupnp.free.fr/"},"miniupnpc")," may be used for UPnP port mapping. It can be downloaded from ",(0,l.kt)("a",{parentName:"p",href:"http://miniupnp.tuxfamily.org/files/"},"here"),". UPnP support is compiled in and\nturned off by default. See the configure options for UPnp behavior desired:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"    --without-miniupnpc      No UPnP support, miniupnp not required\n    --disable-upnp-default   (the default) UPnP support turned off by default at runtime\n    --enable-upnp-default    UPnP support turned on by default at runtime\n")),(0,l.kt)("h2",{id:"libnatpmp"},"libnatpmp"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://miniupnp.tuxfamily.org/libnatpmp.html"},"libnatpmp")," may be used for NAT-PMP port mapping. It can be downloaded\nfrom ",(0,l.kt)("a",{parentName:"p",href:"https://miniupnp.tuxfamily.org/files/"},"here"),". NAT-PMP support is compiled in and\nturned off by default. See the configure options for NAT-PMP behavior desired:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"    --without-natpmp          No NAT-PMP support, libnatpmp not required\n    --disable-natpmp-default  (the default) NAT-PMP support turned off by default at runtime\n    --enable-natpmp-default   NAT-PMP support turned on by default at runtime\n")),(0,l.kt)("p",null,"To build:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"tar -xzvf miniupnpc-1.6.tar.gz\ncd miniupnpc-1.6\nmake\nsudo su\nmake install\n")),(0,l.kt)("h2",{id:"berkeley-db"},"Berkeley DB"),(0,l.kt)("p",null,"It is recommended to use Berkeley DB 4.8. If you have to build it yourself,\nyou can use the installation script included in contrib ",(0,l.kt)("inlineCode",{parentName:"p"},"/contrib/install_db4.sh"),"\nlike so:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"./contrib/install_db4.sh `pwd`\n")),(0,l.kt)("p",null,"from the root of the repository."),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"You only need Berkeley DB if the wallet is enabled (see ",(0,l.kt)("a",{parentName:"p",href:"#disable-wallet-mode"},(0,l.kt)("em",{parentName:"a"},"Disable-wallet mode")),")."))),(0,l.kt)("h2",{id:"boost"},"Boost"),(0,l.kt)("p",null,"If you need to build Boost yourself:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"sudo su\n./bootstrap.sh\n./bjam install\n")),(0,l.kt)("h2",{id:"security"},"Security"),(0,l.kt)("p",null,"To help make your PCOIN Core installation more secure by making certain attacks impossible to\nexploit even if a vulnerability is found, binaries are hardened by default.\nThis can be disabled with:"),(0,l.kt)("p",null,"Hardening Flags:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"./configure --enable-hardening\n./configure --disable-hardening\n")),(0,l.kt)("p",null,"Hardening enables the following features:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("em",{parentName:"p"},"Position Independent Executable"),": Build position independent code to take advantage of Address Space Layout Randomization\noffered by some kernels. Attackers who can cause execution of code at an arbitrary memory\nlocation are thwarted if they don't know where anything useful is located.\nThe stack and heap are randomly located by default, but this allows the code section to be\nrandomly located as well."),(0,l.kt)("p",{parentName:"li"},'On an AMD64 processor where a library was not compiled with -fPIC, this will cause an error\nsuch as: "relocation R_X86_64_32 against `......\' can not be used when making a shared object;"'),(0,l.kt)("p",{parentName:"li"},"To test that you have built PIE executable, install scanelf, part of paxutils, and use:"),(0,l.kt)("p",{parentName:"li"},"scanelf -e ./pcoind"),(0,l.kt)("p",{parentName:"li"},"The output should contain:"),(0,l.kt)("p",{parentName:"li"},"TYPE\nET_DYN")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("em",{parentName:"p"},"Non-executable Stack"),": If the stack is executable then trivial stack-based buffer overflow exploits are possible if\nvulnerable buffers are found. By default, PCOIN Core should be built with a non-executable stack\nbut if one of the libraries it uses asks for an executable stack or someone makes a mistake\nand uses a compiler extension which requires an executable stack, it will silently build an\nexecutable without the non-executable stack protection."),(0,l.kt)("p",{parentName:"li"},"To verify that the stack is non-executable after compiling use:\n",(0,l.kt)("inlineCode",{parentName:"p"},"scanelf -e ./pcoind")),(0,l.kt)("p",{parentName:"li"},"The output should contain:\nSTK/REL/PTL\nRW- R-- RW-"),(0,l.kt)("p",{parentName:"li"},"The STK RW- means that the stack is readable and writeable but not executable."))),(0,l.kt)("h2",{id:"disable-wallet-mode"},"Disable-wallet mode"),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"This functionality is not yet completely implemented, and compilation using the below option will currently fail."))),(0,l.kt)("p",null,"When the intention is to run only a P2P node without a wallet, PCOIN Core may be compiled in\ndisable-wallet mode with:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"./configure --disable-wallet\n")),(0,l.kt)("p",null,"In this case there is no dependency on Berkeley DB 4.8."),(0,l.kt)("h2",{id:"additional-configure-flags"},"Additional Configure Flags"),(0,l.kt)("p",null,"A list of additional configure flags can be displayed with:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"./configure --help\n")),(0,l.kt)("h2",{id:"arm-cross-compilation"},"ARM Cross-compilation"),(0,l.kt)("p",null,"These steps can be performed on, for example, an Ubuntu VM. The depends system\nwill also work on other Linux distributions, however the commands for\ninstalling the toolchain will be different."),(0,l.kt)("p",null,"Make sure you install the build requirements mentioned above.\nThen, install the toolchain and curl:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"sudo apt-get install g++-arm-linux-gnueabihf curl\n")),(0,l.kt)("p",null,"To build executables for ARM:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"cd depends\nmake HOST=arm-linux-gnueabihf NO_QT=1\ncd ..\n./autogen.sh\n./configure --prefix=$PWD/depends/arm-linux-gnueabihf --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++\nmake\n")),(0,l.kt)("p",null,"For further documentation on the depends system check ",(0,l.kt)("a",{parentName:"p",href:"depends"},"depends"),"."))}m.isMDXComponent=!0}}]);