"use strict";(self.webpackChunkpcoin_website=self.webpackChunkpcoin_website||[]).push([[1911],{4137:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return m}});var o=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,i=function(e,n){if(null==e)return{};var t,o,i={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var p=o.createContext({}),c=function(e){var n=o.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=c(e.components);return o.createElement(p.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},s=o.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),s=c(t),m=i,k=s["".concat(p,".").concat(m)]||s[m]||d[m]||r;return t?o.createElement(k,a(a({ref:n},u),{},{components:t})):o.createElement(k,a({ref:n},u))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,a=new Array(r);a[0]=s;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var c=2;c<r;c++)a[c]=t[c];return o.createElement.apply(null,a)}return o.createElement.apply(null,t)}s.displayName="MDXCreateElement"},1480:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return d}});var o=t(3117),i=t(102),r=(t(7294),t(4137)),a=["components"],l={title:"macOS Build guide",description:"Some notes on how to build PCOIN Core in macOS.",sidebar_position:1},p=void 0,c={unversionedId:"Pcoin-Core/Building/build-osx",id:"Pcoin-Core/Building/build-osx",title:"macOS Build guide",description:"Some notes on how to build PCOIN Core in macOS.",source:"@site/docs/Pcoin-Core/Building/build-osx.md",sourceDirName:"Pcoin-Core/Building",slug:"/Pcoin-Core/Building/build-osx",permalink:"/docs/Pcoin-Core/Building/build-osx",draft:!1,editUrl:"https://github.com/pcoinproject/pcoin.dev/edit/master/docs/Pcoin-Core/Building/build-osx.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"macOS Build guide",description:"Some notes on how to build PCOIN Core in macOS.",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"PCOIN Core",permalink:"/docs/Pcoin-Core/"},next:{title:"UNIX Build guide",permalink:"/docs/Pcoin-Core/Building/build-unix"}},u={},d=[{value:"Preparation",id:"preparation",level:2},{value:"Dependencies",id:"dependencies",level:2},{value:"Berkeley DB",id:"berkeley-db",level:2},{value:"Build PCOIN Core",id:"build-pcoin-core",level:2},{value:"Disable-wallet mode",id:"disable-wallet-mode",level:2},{value:"Running",id:"running",level:2},{value:"Other commands:",id:"other-commands",level:2}],s={toc:d};function m(e){var n=e.components,t=(0,i.Z)(e,a);return(0,r.kt)("wrapper",(0,o.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The commands in this guide should be executed in a Terminal application.\nThe built-in one is located in"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"/Applications/Utilities/Terminal.app\n")),(0,r.kt)("h2",{id:"preparation"},"Preparation"),(0,r.kt)("p",null,"Install the macOS command line tools:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"xcode-select --install\n")),(0,r.kt)("p",null,"When the popup appears, click ",(0,r.kt)("inlineCode",{parentName:"p"},"Install"),"."),(0,r.kt)("p",null,"Then install ",(0,r.kt)("a",{parentName:"p",href:"https://brew.sh"},"Homebrew"),"."),(0,r.kt)("h2",{id:"dependencies"},"Dependencies"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"brew install autoconf automake berkeley-db4 libtool boost miniupnpc libnatpmp pkg-config python3 qt5 zmq libevent qrencode gmp libsodium rust\n")),(0,r.kt)("p",null,"See ",(0,r.kt)("a",{parentName:"p",href:"dependencies"},"dependencies")," for a complete overview."),(0,r.kt)("p",null,"If you want to build the disk image with ",(0,r.kt)("inlineCode",{parentName:"p"},"make deploy")," (.dmg / optional), you need RSVG:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"brew install librsvg\n")),(0,r.kt)("p",null,"and ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/pcoinproject/pcoin/blob/master/contrib/macdeploy/README.md"},(0,r.kt)("inlineCode",{parentName:"a"},"macdeployqtplus"))," dependencies:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"pip3 install ds_store mac_alias\n")),(0,r.kt)("h2",{id:"berkeley-db"},"Berkeley DB"),(0,r.kt)("p",null,"It is recommended to use Berkeley DB 4.8. If you have to build it yourself,\nyou can use the installation script included in ",(0,r.kt)("inlineCode",{parentName:"p"},"/contrib")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"./contrib/install_db4.sh .\n")),(0,r.kt)("p",null,"from the root of the repository."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"You only need Berkeley DB if the wallet is enabled (see ",(0,r.kt)("a",{parentName:"p",href:"#disable-wallet-mode"},(0,r.kt)("em",{parentName:"a"},"Disable-wallet mode")),").")),(0,r.kt)("h2",{id:"build-pcoin-core"},"Build PCOIN Core"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Clone the PCOIN Core source code:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"git clone https://github.com/pcoinproject/pcoin\ncd pcoin\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Build PCOIN Core:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"./autogen.sh\n./configure\nmake\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"It is recommended to build and run the unit tests:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"./params/install-params.sh\nmake check\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"You can also create a .dmg that contains the .app bundle (optional):"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"make deploy\n")))),(0,r.kt)("h2",{id:"disable-wallet-mode"},"Disable-wallet mode"),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"This functionality is not yet completely implemented, and compilation using the below option will currently fail.")),(0,r.kt)("p",null,"When the intention is to run only a P2P node without a wallet, PCOIN Core may be compiled in\ndisable-wallet mode with:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"./configure --disable-wallet\n")),(0,r.kt)("p",null,"In this case there is no dependency on Berkeley DB 4.8."),(0,r.kt)("h2",{id:"running"},"Running"),(0,r.kt)("p",null,"PCOIN Core is now available at ",(0,r.kt)("inlineCode",{parentName:"p"},"./src/pcoind")),(0,r.kt)("p",null,"Before running, you may create an empty configuration file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'mkdir -p "/Users/${USER}/Library/Application Support/PCOIN"\n\ntouch "/Users/${USER}/Library/Application Support/PCOIN/pcoin.conf"\n\nchmod 600 "/Users/${USER}/Library/Application Support/PCOIN/pcoin.conf"\n')),(0,r.kt)("p",null,"The first time you run pcoind, it will start downloading the blockchain. This process could take many hours, or even days on slower than average systems."),(0,r.kt)("p",null,"You can monitor the download process by looking at the debug.log file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"tail -f $HOME/Library/Application\\ Support/PCOIN/debug.log\n")),(0,r.kt)("h2",{id:"other-commands"},"Other commands:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"./src/pcoind -daemon # Starts the pcoin daemon.\n./src/pcoin-cli --help # Outputs a list of command-line options.\n./src/pcoin-cli help # Outputs a list of RPC commands when the daemon is running.\n")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Building with downloaded Qt binaries is not officially supported. See the notes in ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/bitcoin/bitcoin/issues/7714"},"#7714"),".")))}m.isMDXComponent=!0}}]);